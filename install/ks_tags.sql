
create table ks_tags (
    id             number        generated by default on null as identity (start with 1) primary key not null
  , tag            varchar2(255) not null
  , content_id     number
  , content_type   varchar2(30) 
  , created_by     varchar2(60) default 
                    coalesce(
                       sys_context('APEX$SESSION','app_user')
                       ,regexp_substr(sys_context('userenv','client_identifier'),'^[^:]*')
                       ,sys_context('userenv','session_user')
                       )
                    not null
  , created_on     date         default sysdate not null
  , updated_by     varchar2(60)
  , updated_on     date
)
enable primary key using index
/

create index ks_tags_i01 on ks_tags(tag)
/

comment on table ks_tags is 'Reference of Tags assigned and the row (content_type, content_id) they are assigned to.';

comment on column ks_tags.tag is 'Actual tag.';
comment on column ks_tags.content_type is 'Entity that uses the tag.  Currently SESSION:{TRACK_ID}';
comment on column ks_tags.content_id   is 'ID of Entity that uses the tag.';

--------------------------------------------------------
--  DDL for Trigger ks_tags_u_trg
--------------------------------------------------------
create or replace trigger ks_tags_u_trg
before update
on ks_tags
referencing old as old new as new
for each row
begin
  :new.updated_on := sysdate;
  :new.updated_by := coalesce(
                        sys_context('APEX$SESSION','app_user')
                      , regexp_substr(sys_context('userenv','client_identifier'),'^[^:]*')
                      , sys_context('userenv','session_user')
                     );
end;
/
alter trigger ks_tags_u_trg enable;

-- ========================================
PROMPT ks_tag_sums
create table ks_tag_sums (
    tag                   varchar2(255) not null
  , tag_count             number
  , constraint ks_tag_sums_pk primary key (tag)
)
enable primary key using index 
/


comment on table ks_tag_sums is 'All tags and their counts.';

comment on column ks_tag_sums.tag is 'Actual tag.';
comment on column ks_tag_sums.tag_count is 'Number of times the tag appears.';

-- ========================================
PROMPT ks_tag_type_sums
create table ks_tag_type_sums (
    tag                   varchar2(255) not null
  , tag_count             number
  , content_type          varchar2(30)
  , constraint ks_tag_type_sums_pk primary key (tag, content_type)
)
enable primary key using index
/


comment on table ks_tag_type_sums is 'All tags and their counts by type.';

comment on column ks_tag_type_sums.tag is 'Actual tag.';
comment on column ks_tag_type_sums.tag_count is 'Number of times the tag appears.';
comment on column ks_tag_type_sums.content_type is 'Entity that uses the tag.  Currently SESSION:{TRACK_ID}';

